[project]
name = "namegnome-serve"
version = "0.1.0"
description = "Local-first media file renaming service powered by LangChain, LangServe, and Ollama"
authors = [
    {name = "Douglas MacKrell",email = "your@email.com"}
]
readme = "README.md"
requires-python = ">=3.12,<4.0"
dependencies = [
    "fastapi (>=0.118.0,<0.119.0)",
    "pydantic (>=2.11.10,<3.0.0)",
    "httpx (>=0.28.1,<0.29.0)",
    "rich (>=14.1.0,<15.0.0)",
    "structlog (>=25.4.0,<26.0.0)",
    "anyio (>=4.11.0,<5.0.0)",
    "uvicorn (>=0.37.0,<0.38.0)",
    "langchain (>=0.3.27,<0.4.0)",
    "langserve (>=0.3.2,<0.4.0)",
    "typer (>=0.19.2,<0.20.0)",
    "langchain-community (>=0.3.30,<0.4.0)",
    "langchain-ollama (>=0.3.10,<0.4.0)"
]


[build-system]
requires = ["poetry-core>=2.0.0,<3.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.poetry.group.dev.dependencies]
black = "^25.9.0"
ruff = "^0.13.3"
mypy = "^1.18.2"
pytest = "^8.4.2"
pytest-cov = "^7.0.0"
pre-commit = "^4.3.0"

[tool.poetry]
packages = [{include = "namegnome_serve", from = "src"}]

[tool.black]
line-length = 88
target-version = ['py312']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.venv
  | build
  | dist
)/
'''

[tool.ruff]
line-length = 88
target-version = "py312"
exclude = [
    ".git",
    ".venv",
    "__pycache__",
    "build",
    "dist",
]

[tool.ruff.lint]
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # pyflakes
    "I",   # isort
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "UP",  # pyupgrade
]
ignore = []

[tool.mypy]
python_version = "3.12"
strict = true
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_any_generics = true
check_untyped_defs = true
warn_redundant_casts = true
warn_unused_ignores = true
no_implicit_optional = true
show_error_codes = true
pretty = true

[[tool.mypy.overrides]]
module = [
    "langchain.*",
    "langserve.*",
    "structlog.*",
]
ignore_missing_imports = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--cov=namegnome_serve",
    "--cov-report=html",
    "--cov-report=term",
    "--cov-fail-under=80",
    "-v",
]

[tool.coverage.run]
source = ["src"]
omit = ["tests/*", "**/__init__.py"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:",
    "@abstractmethod",
]
